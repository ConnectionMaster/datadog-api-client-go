/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// UserJSONAPIResponseRelationships Relationships for the User.
type UserJSONAPIResponseRelationships struct {
	Org *UserJSONAPIResponseRelationshipsOrg `json:"org,omitempty"`
}

// NewUserJSONAPIResponseRelationships instantiates a new UserJSONAPIResponseRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserJSONAPIResponseRelationships() *UserJSONAPIResponseRelationships {
	this := UserJSONAPIResponseRelationships{}
	return &this
}

// NewUserJSONAPIResponseRelationshipsWithDefaults instantiates a new UserJSONAPIResponseRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserJSONAPIResponseRelationshipsWithDefaults() *UserJSONAPIResponseRelationships {
	this := UserJSONAPIResponseRelationships{}
	return &this
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *UserJSONAPIResponseRelationships) GetOrg() UserJSONAPIResponseRelationshipsOrg {
	if o == nil || o.Org == nil {
		var ret UserJSONAPIResponseRelationshipsOrg
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserJSONAPIResponseRelationships) GetOrgOk() (*UserJSONAPIResponseRelationshipsOrg, bool) {
	if o == nil || o.Org == nil {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *UserJSONAPIResponseRelationships) HasOrg() bool {
	if o != nil && o.Org != nil {
		return true
	}

	return false
}

// SetOrg gets a reference to the given UserJSONAPIResponseRelationshipsOrg and assigns it to the Org field.
func (o *UserJSONAPIResponseRelationships) SetOrg(v UserJSONAPIResponseRelationshipsOrg) {
	o.Org = &v
}

func (o UserJSONAPIResponseRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Org != nil {
		toSerialize["org"] = o.Org
	}
	return json.Marshal(toSerialize)
}

type NullableUserJSONAPIResponseRelationships struct {
	value *UserJSONAPIResponseRelationships
	isSet bool
}

func (v NullableUserJSONAPIResponseRelationships) Get() *UserJSONAPIResponseRelationships {
	return v.value
}

func (v *NullableUserJSONAPIResponseRelationships) Set(val *UserJSONAPIResponseRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableUserJSONAPIResponseRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableUserJSONAPIResponseRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserJSONAPIResponseRelationships(val *UserJSONAPIResponseRelationships) *NullableUserJSONAPIResponseRelationships {
	return &NullableUserJSONAPIResponseRelationships{value: val, isSet: true}
}

func (v NullableUserJSONAPIResponseRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserJSONAPIResponseRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
