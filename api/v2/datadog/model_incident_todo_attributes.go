/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"time"
)

// IncidentTodoAttributes JSON API Schema attributes.
type IncidentTodoAttributes struct {
	// Timestamp of when the todo was marked completed.
	Completed NullableTime `json:"completed,omitempty"`
	// A string representing the content of the todo.
	Content *string `json:"content,omitempty"`
	// Timestamp of when an todo was created.
	Created *time.Time `json:"created,omitempty"`
	// ID of the incident for this todo.
	IncidentId *string `json:"incident_id,omitempty"`
	// Timestamp of when an todo was modified.
	Modified *time.Time `json:"modified,omitempty"`
}

// NewIncidentTodoAttributes instantiates a new IncidentTodoAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentTodoAttributes() *IncidentTodoAttributes {
	this := IncidentTodoAttributes{}
	return &this
}

// NewIncidentTodoAttributesWithDefaults instantiates a new IncidentTodoAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentTodoAttributesWithDefaults() *IncidentTodoAttributes {
	this := IncidentTodoAttributes{}
	return &this
}

// GetCompleted returns the Completed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IncidentTodoAttributes) GetCompleted() time.Time {
	if o == nil || o.Completed.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Completed.Get()
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncidentTodoAttributes) GetCompletedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Completed.Get(), o.Completed.IsSet()
}

// HasCompleted returns a boolean if a field has been set.
func (o *IncidentTodoAttributes) HasCompleted() bool {
	if o != nil && o.Completed.IsSet() {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given NullableTime and assigns it to the Completed field.
func (o *IncidentTodoAttributes) SetCompleted(v time.Time) {
	o.Completed.Set(&v)
}

// SetCompletedNil sets the value for Completed to be an explicit nil
func (o *IncidentTodoAttributes) SetCompletedNil() {
	o.Completed.Set(nil)
}

// UnsetCompleted ensures that no value is present for Completed, not even an explicit nil
func (o *IncidentTodoAttributes) UnsetCompleted() {
	o.Completed.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *IncidentTodoAttributes) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTodoAttributes) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *IncidentTodoAttributes) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *IncidentTodoAttributes) SetContent(v string) {
	o.Content = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *IncidentTodoAttributes) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTodoAttributes) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *IncidentTodoAttributes) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *IncidentTodoAttributes) SetCreated(v time.Time) {
	o.Created = &v
}

// GetIncidentId returns the IncidentId field value if set, zero value otherwise.
func (o *IncidentTodoAttributes) GetIncidentId() string {
	if o == nil || o.IncidentId == nil {
		var ret string
		return ret
	}
	return *o.IncidentId
}

// GetIncidentIdOk returns a tuple with the IncidentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTodoAttributes) GetIncidentIdOk() (*string, bool) {
	if o == nil || o.IncidentId == nil {
		return nil, false
	}
	return o.IncidentId, true
}

// HasIncidentId returns a boolean if a field has been set.
func (o *IncidentTodoAttributes) HasIncidentId() bool {
	if o != nil && o.IncidentId != nil {
		return true
	}

	return false
}

// SetIncidentId gets a reference to the given string and assigns it to the IncidentId field.
func (o *IncidentTodoAttributes) SetIncidentId(v string) {
	o.IncidentId = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *IncidentTodoAttributes) GetModified() time.Time {
	if o == nil || o.Modified == nil {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTodoAttributes) GetModifiedOk() (*time.Time, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *IncidentTodoAttributes) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *IncidentTodoAttributes) SetModified(v time.Time) {
	o.Modified = &v
}

func (o IncidentTodoAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Completed.IsSet() {
		toSerialize["completed"] = o.Completed.Get()
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.IncidentId != nil {
		toSerialize["incident_id"] = o.IncidentId
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentTodoAttributes struct {
	value *IncidentTodoAttributes
	isSet bool
}

func (v NullableIncidentTodoAttributes) Get() *IncidentTodoAttributes {
	return v.value
}

func (v *NullableIncidentTodoAttributes) Set(val *IncidentTodoAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentTodoAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentTodoAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentTodoAttributes(val *IncidentTodoAttributes) *NullableIncidentTodoAttributes {
	return &NullableIncidentTodoAttributes{value: val, isSet: true}
}

func (v NullableIncidentTodoAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentTodoAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
