/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// IncidentSummaryAttributes The Incident summary attributes.
type IncidentSummaryAttributes struct {
	// A mapping of search facets by facet name.
	Facets map[string]IncidentFacetSchema `json:"facets,omitempty"`
	// The total count of matched incidents.
	Total *int64 `json:"total,omitempty"`
}

// NewIncidentSummaryAttributes instantiates a new IncidentSummaryAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentSummaryAttributes() *IncidentSummaryAttributes {
	this := IncidentSummaryAttributes{}
	return &this
}

// NewIncidentSummaryAttributesWithDefaults instantiates a new IncidentSummaryAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentSummaryAttributesWithDefaults() *IncidentSummaryAttributes {
	this := IncidentSummaryAttributes{}
	return &this
}

// GetFacets returns the Facets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IncidentSummaryAttributes) GetFacets() map[string]IncidentFacetSchema {
	if o == nil {
		var ret map[string]IncidentFacetSchema
		return ret
	}
	return o.Facets
}

// GetFacetsOk returns a tuple with the Facets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncidentSummaryAttributes) GetFacetsOk() (*map[string]IncidentFacetSchema, bool) {
	if o == nil || o.Facets == nil {
		return nil, false
	}
	return &o.Facets, true
}

// HasFacets returns a boolean if a field has been set.
func (o *IncidentSummaryAttributes) HasFacets() bool {
	if o != nil && o.Facets != nil {
		return true
	}

	return false
}

// SetFacets gets a reference to the given map[string]IncidentFacetSchema and assigns it to the Facets field.
func (o *IncidentSummaryAttributes) SetFacets(v map[string]IncidentFacetSchema) {
	o.Facets = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *IncidentSummaryAttributes) GetTotal() int64 {
	if o == nil || o.Total == nil {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSummaryAttributes) GetTotalOk() (*int64, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *IncidentSummaryAttributes) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *IncidentSummaryAttributes) SetTotal(v int64) {
	o.Total = &v
}

func (o IncidentSummaryAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Facets != nil {
		toSerialize["facets"] = o.Facets
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentSummaryAttributes struct {
	value *IncidentSummaryAttributes
	isSet bool
}

func (v NullableIncidentSummaryAttributes) Get() *IncidentSummaryAttributes {
	return v.value
}

func (v *NullableIncidentSummaryAttributes) Set(val *IncidentSummaryAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentSummaryAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentSummaryAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentSummaryAttributes(val *IncidentSummaryAttributes) *NullableIncidentSummaryAttributes {
	return &NullableIncidentSummaryAttributes{value: val, isSet: true}
}

func (v NullableIncidentSummaryAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentSummaryAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
