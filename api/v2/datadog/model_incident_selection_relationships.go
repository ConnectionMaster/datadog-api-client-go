/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// IncidentSelectionRelationships The User and Config relationships.
type IncidentSelectionRelationships struct {
	Choice         *IncidentSelectionRelationshipsChoice `json:"choice,omitempty"`
	Field          *IncidentSelectionRelationshipsField  `json:"field,omitempty"`
	LastModifiedBy *UserJSONAPIID                        `json:"last_modified_by,omitempty"`
}

// NewIncidentSelectionRelationships instantiates a new IncidentSelectionRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentSelectionRelationships() *IncidentSelectionRelationships {
	this := IncidentSelectionRelationships{}
	return &this
}

// NewIncidentSelectionRelationshipsWithDefaults instantiates a new IncidentSelectionRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentSelectionRelationshipsWithDefaults() *IncidentSelectionRelationships {
	this := IncidentSelectionRelationships{}
	return &this
}

// GetChoice returns the Choice field value if set, zero value otherwise.
func (o *IncidentSelectionRelationships) GetChoice() IncidentSelectionRelationshipsChoice {
	if o == nil || o.Choice == nil {
		var ret IncidentSelectionRelationshipsChoice
		return ret
	}
	return *o.Choice
}

// GetChoiceOk returns a tuple with the Choice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSelectionRelationships) GetChoiceOk() (*IncidentSelectionRelationshipsChoice, bool) {
	if o == nil || o.Choice == nil {
		return nil, false
	}
	return o.Choice, true
}

// HasChoice returns a boolean if a field has been set.
func (o *IncidentSelectionRelationships) HasChoice() bool {
	if o != nil && o.Choice != nil {
		return true
	}

	return false
}

// SetChoice gets a reference to the given IncidentSelectionRelationshipsChoice and assigns it to the Choice field.
func (o *IncidentSelectionRelationships) SetChoice(v IncidentSelectionRelationshipsChoice) {
	o.Choice = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *IncidentSelectionRelationships) GetField() IncidentSelectionRelationshipsField {
	if o == nil || o.Field == nil {
		var ret IncidentSelectionRelationshipsField
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSelectionRelationships) GetFieldOk() (*IncidentSelectionRelationshipsField, bool) {
	if o == nil || o.Field == nil {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *IncidentSelectionRelationships) HasField() bool {
	if o != nil && o.Field != nil {
		return true
	}

	return false
}

// SetField gets a reference to the given IncidentSelectionRelationshipsField and assigns it to the Field field.
func (o *IncidentSelectionRelationships) SetField(v IncidentSelectionRelationshipsField) {
	o.Field = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *IncidentSelectionRelationships) GetLastModifiedBy() UserJSONAPIID {
	if o == nil || o.LastModifiedBy == nil {
		var ret UserJSONAPIID
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSelectionRelationships) GetLastModifiedByOk() (*UserJSONAPIID, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *IncidentSelectionRelationships) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given UserJSONAPIID and assigns it to the LastModifiedBy field.
func (o *IncidentSelectionRelationships) SetLastModifiedBy(v UserJSONAPIID) {
	o.LastModifiedBy = &v
}

func (o IncidentSelectionRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Choice != nil {
		toSerialize["choice"] = o.Choice
	}
	if o.Field != nil {
		toSerialize["field"] = o.Field
	}
	if o.LastModifiedBy != nil {
		toSerialize["last_modified_by"] = o.LastModifiedBy
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentSelectionRelationships struct {
	value *IncidentSelectionRelationships
	isSet bool
}

func (v NullableIncidentSelectionRelationships) Get() *IncidentSelectionRelationships {
	return v.value
}

func (v *NullableIncidentSelectionRelationships) Set(val *IncidentSelectionRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentSelectionRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentSelectionRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentSelectionRelationships(val *IncidentSelectionRelationships) *NullableIncidentSelectionRelationships {
	return &NullableIncidentSelectionRelationships{value: val, isSet: true}
}

func (v NullableIncidentSelectionRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentSelectionRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
