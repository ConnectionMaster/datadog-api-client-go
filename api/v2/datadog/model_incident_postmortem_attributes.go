/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"time"
)

// IncidentPostmortemAttributes The Postmortem attributes.
type IncidentPostmortemAttributes struct {
	// Timestamp of when an postmortem was created.
	Created *time.Time `json:"created,omitempty"`
	// ID of the incident for this postmortem.
	IncidentId *string `json:"incident_id,omitempty"`
	// Timestamp of when an postmortem was modified.
	Modified *time.Time `json:"modified,omitempty"`
	// Current state of the postmortem (i.e. not_started. draft).
	State *string `json:"state,omitempty"`
}

// NewIncidentPostmortemAttributes instantiates a new IncidentPostmortemAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentPostmortemAttributes() *IncidentPostmortemAttributes {
	this := IncidentPostmortemAttributes{}
	var state string = "not_started"
	this.State = &state
	return &this
}

// NewIncidentPostmortemAttributesWithDefaults instantiates a new IncidentPostmortemAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentPostmortemAttributesWithDefaults() *IncidentPostmortemAttributes {
	this := IncidentPostmortemAttributes{}
	var state string = "not_started"
	this.State = &state
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *IncidentPostmortemAttributes) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentPostmortemAttributes) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *IncidentPostmortemAttributes) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *IncidentPostmortemAttributes) SetCreated(v time.Time) {
	o.Created = &v
}

// GetIncidentId returns the IncidentId field value if set, zero value otherwise.
func (o *IncidentPostmortemAttributes) GetIncidentId() string {
	if o == nil || o.IncidentId == nil {
		var ret string
		return ret
	}
	return *o.IncidentId
}

// GetIncidentIdOk returns a tuple with the IncidentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentPostmortemAttributes) GetIncidentIdOk() (*string, bool) {
	if o == nil || o.IncidentId == nil {
		return nil, false
	}
	return o.IncidentId, true
}

// HasIncidentId returns a boolean if a field has been set.
func (o *IncidentPostmortemAttributes) HasIncidentId() bool {
	if o != nil && o.IncidentId != nil {
		return true
	}

	return false
}

// SetIncidentId gets a reference to the given string and assigns it to the IncidentId field.
func (o *IncidentPostmortemAttributes) SetIncidentId(v string) {
	o.IncidentId = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *IncidentPostmortemAttributes) GetModified() time.Time {
	if o == nil || o.Modified == nil {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentPostmortemAttributes) GetModifiedOk() (*time.Time, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *IncidentPostmortemAttributes) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *IncidentPostmortemAttributes) SetModified(v time.Time) {
	o.Modified = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *IncidentPostmortemAttributes) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentPostmortemAttributes) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *IncidentPostmortemAttributes) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *IncidentPostmortemAttributes) SetState(v string) {
	o.State = &v
}

func (o IncidentPostmortemAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.IncidentId != nil {
		toSerialize["incident_id"] = o.IncidentId
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentPostmortemAttributes struct {
	value *IncidentPostmortemAttributes
	isSet bool
}

func (v NullableIncidentPostmortemAttributes) Get() *IncidentPostmortemAttributes {
	return v.value
}

func (v *NullableIncidentPostmortemAttributes) Set(val *IncidentPostmortemAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentPostmortemAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentPostmortemAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentPostmortemAttributes(val *IncidentPostmortemAttributes) *NullableIncidentPostmortemAttributes {
	return &NullableIncidentPostmortemAttributes{value: val, isSet: true}
}

func (v NullableIncidentPostmortemAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentPostmortemAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
