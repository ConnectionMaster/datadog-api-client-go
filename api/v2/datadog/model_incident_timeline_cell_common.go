/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
	"time"
)

// IncidentTimelineCellCommon The Timeline cell content. This is used both as a payload return as well as can be used to initialize an incident.
type IncidentTimelineCellCommon struct {
	// A string representing the cell content type.
	CellType string `json:"cell_type"`
	// The cell content.
	Content IncidentTimelineCellCommonContentOneOf `json:"content"`
	// Timestamp of when a cell was created.
	Created *time.Time `json:"created,omitempty"`
	// Timestamp of when a cell was deleted.
	Deleted *time.Time `json:"deleted,omitempty"`
	// Timestamp of display time for a given cell. This is used to sort the timeline view.
	DisplayTime *time.Time `json:"display_time,omitempty"`
	// Timestamp of when a cell was modified.
	Modified *time.Time `json:"modified,omitempty"`
	// A string representing the source of the cell.
	Source NullableString `json:"source,omitempty"`
}

// NewIncidentTimelineCellCommon instantiates a new IncidentTimelineCellCommon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentTimelineCellCommon(cellType string, content IncidentTimelineCellCommonContentOneOf) *IncidentTimelineCellCommon {
	this := IncidentTimelineCellCommon{}
	this.CellType = cellType
	this.Content = content
	return &this
}

// NewIncidentTimelineCellCommonWithDefaults instantiates a new IncidentTimelineCellCommon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentTimelineCellCommonWithDefaults() *IncidentTimelineCellCommon {
	this := IncidentTimelineCellCommon{}
	return &this
}

// GetCellType returns the CellType field value
func (o *IncidentTimelineCellCommon) GetCellType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CellType
}

// GetCellTypeOk returns a tuple with the CellType field value
// and a boolean to check if the value has been set.
func (o *IncidentTimelineCellCommon) GetCellTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CellType, true
}

// SetCellType sets field value
func (o *IncidentTimelineCellCommon) SetCellType(v string) {
	o.CellType = v
}

// GetContent returns the Content field value
func (o *IncidentTimelineCellCommon) GetContent() IncidentTimelineCellCommonContentOneOf {
	if o == nil {
		var ret IncidentTimelineCellCommonContentOneOf
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *IncidentTimelineCellCommon) GetContentOk() (*IncidentTimelineCellCommonContentOneOf, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *IncidentTimelineCellCommon) SetContent(v IncidentTimelineCellCommonContentOneOf) {
	o.Content = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *IncidentTimelineCellCommon) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTimelineCellCommon) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *IncidentTimelineCellCommon) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *IncidentTimelineCellCommon) SetCreated(v time.Time) {
	o.Created = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *IncidentTimelineCellCommon) GetDeleted() time.Time {
	if o == nil || o.Deleted == nil {
		var ret time.Time
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTimelineCellCommon) GetDeletedOk() (*time.Time, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *IncidentTimelineCellCommon) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given time.Time and assigns it to the Deleted field.
func (o *IncidentTimelineCellCommon) SetDeleted(v time.Time) {
	o.Deleted = &v
}

// GetDisplayTime returns the DisplayTime field value if set, zero value otherwise.
func (o *IncidentTimelineCellCommon) GetDisplayTime() time.Time {
	if o == nil || o.DisplayTime == nil {
		var ret time.Time
		return ret
	}
	return *o.DisplayTime
}

// GetDisplayTimeOk returns a tuple with the DisplayTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTimelineCellCommon) GetDisplayTimeOk() (*time.Time, bool) {
	if o == nil || o.DisplayTime == nil {
		return nil, false
	}
	return o.DisplayTime, true
}

// HasDisplayTime returns a boolean if a field has been set.
func (o *IncidentTimelineCellCommon) HasDisplayTime() bool {
	if o != nil && o.DisplayTime != nil {
		return true
	}

	return false
}

// SetDisplayTime gets a reference to the given time.Time and assigns it to the DisplayTime field.
func (o *IncidentTimelineCellCommon) SetDisplayTime(v time.Time) {
	o.DisplayTime = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *IncidentTimelineCellCommon) GetModified() time.Time {
	if o == nil || o.Modified == nil {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentTimelineCellCommon) GetModifiedOk() (*time.Time, bool) {
	if o == nil || o.Modified == nil {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *IncidentTimelineCellCommon) HasModified() bool {
	if o != nil && o.Modified != nil {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *IncidentTimelineCellCommon) SetModified(v time.Time) {
	o.Modified = &v
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IncidentTimelineCellCommon) GetSource() string {
	if o == nil || o.Source.Get() == nil {
		var ret string
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncidentTimelineCellCommon) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *IncidentTimelineCellCommon) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableString and assigns it to the Source field.
func (o *IncidentTimelineCellCommon) SetSource(v string) {
	o.Source.Set(&v)
}

// SetSourceNil sets the value for Source to be an explicit nil
func (o *IncidentTimelineCellCommon) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *IncidentTimelineCellCommon) UnsetSource() {
	o.Source.Unset()
}

func (o IncidentTimelineCellCommon) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cell_type"] = o.CellType
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.DisplayTime != nil {
		toSerialize["display_time"] = o.DisplayTime
	}
	if o.Modified != nil {
		toSerialize["modified"] = o.Modified
	}
	if o.Source.IsSet() {
		toSerialize["source"] = o.Source.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentTimelineCellCommon struct {
	value *IncidentTimelineCellCommon
	isSet bool
}

func (v NullableIncidentTimelineCellCommon) Get() *IncidentTimelineCellCommon {
	return v.value
}

func (v *NullableIncidentTimelineCellCommon) Set(val *IncidentTimelineCellCommon) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentTimelineCellCommon) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentTimelineCellCommon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentTimelineCellCommon(val *IncidentTimelineCellCommon) *NullableIncidentTimelineCellCommon {
	return &NullableIncidentTimelineCellCommon{value: val, isSet: true}
}

func (v NullableIncidentTimelineCellCommon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentTimelineCellCommon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
