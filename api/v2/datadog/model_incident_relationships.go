/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// IncidentRelationships The User relationships.
type IncidentRelationships struct {
	Commander      *UserJSONAPIID `json:"commander,omitempty"`
	CreatedBy      *UserJSONAPIID `json:"created_by,omitempty"`
	LastModifiedBy *UserJSONAPIID `json:"last_modified_by,omitempty"`
}

// NewIncidentRelationships instantiates a new IncidentRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentRelationships() *IncidentRelationships {
	this := IncidentRelationships{}
	return &this
}

// NewIncidentRelationshipsWithDefaults instantiates a new IncidentRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentRelationshipsWithDefaults() *IncidentRelationships {
	this := IncidentRelationships{}
	return &this
}

// GetCommander returns the Commander field value if set, zero value otherwise.
func (o *IncidentRelationships) GetCommander() UserJSONAPIID {
	if o == nil || o.Commander == nil {
		var ret UserJSONAPIID
		return ret
	}
	return *o.Commander
}

// GetCommanderOk returns a tuple with the Commander field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRelationships) GetCommanderOk() (*UserJSONAPIID, bool) {
	if o == nil || o.Commander == nil {
		return nil, false
	}
	return o.Commander, true
}

// HasCommander returns a boolean if a field has been set.
func (o *IncidentRelationships) HasCommander() bool {
	if o != nil && o.Commander != nil {
		return true
	}

	return false
}

// SetCommander gets a reference to the given UserJSONAPIID and assigns it to the Commander field.
func (o *IncidentRelationships) SetCommander(v UserJSONAPIID) {
	o.Commander = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *IncidentRelationships) GetCreatedBy() UserJSONAPIID {
	if o == nil || o.CreatedBy == nil {
		var ret UserJSONAPIID
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRelationships) GetCreatedByOk() (*UserJSONAPIID, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *IncidentRelationships) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given UserJSONAPIID and assigns it to the CreatedBy field.
func (o *IncidentRelationships) SetCreatedBy(v UserJSONAPIID) {
	o.CreatedBy = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *IncidentRelationships) GetLastModifiedBy() UserJSONAPIID {
	if o == nil || o.LastModifiedBy == nil {
		var ret UserJSONAPIID
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRelationships) GetLastModifiedByOk() (*UserJSONAPIID, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *IncidentRelationships) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given UserJSONAPIID and assigns it to the LastModifiedBy field.
func (o *IncidentRelationships) SetLastModifiedBy(v UserJSONAPIID) {
	o.LastModifiedBy = &v
}

func (o IncidentRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Commander != nil {
		toSerialize["commander"] = o.Commander
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.LastModifiedBy != nil {
		toSerialize["last_modified_by"] = o.LastModifiedBy
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentRelationships struct {
	value *IncidentRelationships
	isSet bool
}

func (v NullableIncidentRelationships) Get() *IncidentRelationships {
	return v.value
}

func (v *NullableIncidentRelationships) Set(val *IncidentRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentRelationships(val *IncidentRelationships) *NullableIncidentRelationships {
	return &NullableIncidentRelationships{value: val, isSet: true}
}

func (v NullableIncidentRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
