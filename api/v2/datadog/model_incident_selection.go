/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// IncidentSelection Represents an Incident Selection Item.
type IncidentSelection struct {
	Attributes *IncidentSelectionAttributes `json:"attributes,omitempty"`
	// The Incident Selection ID.
	Id            *string                         `json:"id,omitempty"`
	Relationships *IncidentSelectionRelationships `json:"relationships,omitempty"`
	// JSONAPI Model Type
	Type *string `json:"type,omitempty"`
}

// NewIncidentSelection instantiates a new IncidentSelection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentSelection() *IncidentSelection {
	this := IncidentSelection{}
	return &this
}

// NewIncidentSelectionWithDefaults instantiates a new IncidentSelection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentSelectionWithDefaults() *IncidentSelection {
	this := IncidentSelection{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *IncidentSelection) GetAttributes() IncidentSelectionAttributes {
	if o == nil || o.Attributes == nil {
		var ret IncidentSelectionAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSelection) GetAttributesOk() (*IncidentSelectionAttributes, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *IncidentSelection) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given IncidentSelectionAttributes and assigns it to the Attributes field.
func (o *IncidentSelection) SetAttributes(v IncidentSelectionAttributes) {
	o.Attributes = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IncidentSelection) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSelection) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IncidentSelection) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IncidentSelection) SetId(v string) {
	o.Id = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *IncidentSelection) GetRelationships() IncidentSelectionRelationships {
	if o == nil || o.Relationships == nil {
		var ret IncidentSelectionRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSelection) GetRelationshipsOk() (*IncidentSelectionRelationships, bool) {
	if o == nil || o.Relationships == nil {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *IncidentSelection) HasRelationships() bool {
	if o != nil && o.Relationships != nil {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given IncidentSelectionRelationships and assigns it to the Relationships field.
func (o *IncidentSelection) SetRelationships(v IncidentSelectionRelationships) {
	o.Relationships = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IncidentSelection) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSelection) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IncidentSelection) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IncidentSelection) SetType(v string) {
	o.Type = &v
}

func (o IncidentSelection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Relationships != nil {
		toSerialize["relationships"] = o.Relationships
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentSelection struct {
	value *IncidentSelection
	isSet bool
}

func (v NullableIncidentSelection) Get() *IncidentSelection {
	return v.value
}

func (v *NullableIncidentSelection) Set(val *IncidentSelection) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentSelection) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentSelection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentSelection(val *IncidentSelection) *NullableIncidentSelection {
	return &NullableIncidentSelection{value: val, isSet: true}
}

func (v NullableIncidentSelection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentSelection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
